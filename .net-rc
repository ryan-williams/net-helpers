
export nh="$(dirname "${BASH_SOURCE[0]}")/net-helpers"

alias digs="dig +short"
alias lsp=ps-port
alias lp=ps-port
alias psp=ps-port
alias chp=ncz
alias check-port=ncz

alias ifa="ifconfig -a"
alias ifal="ifconfig -a | less"

alias my-ip="curl ifconfig\.me/ip"

alias psc=ps-cmd
alias pgc="ping google.com"

alias psg="ps aux | grep"
alias psgi="ps aux | grep -i"

alias tp="htop --sort-key cpu"
export UNAME="$(uname)"

defn ith ip-to-hostname
defn pi parse-ip

alias wg=wget
alias unroll-url="curl -Ls -o /dev/null -w '%{url_effective}\n'"
defn ur unroll-url

telnet_local_port() {
  if [ $# -eq 2 ]; then
    opt="$1"
    shift
    port="$1"
    shift
    if [ "$opt" -eq "-1" ]; then
      host="127.0.0.1"
    elif [ "$opt" -eq "-0" ]; then
      host="0.0.0.0"
    else
      echo "Usage: $0 [-0|-1] <port>" >&2
      return 1
    fi
  elif [ $# -eq 1 ]; then
    host=localhost
    port="$1"
    shift
  else
    echo "Usage: $0 [-0|-1] <port>" >&2
    return 1
  fi
  telnet "$host" "$port"
}
export -f telnet_local_port

defn tlp telnet_local_port
defn tnp telnet_local_port

test_telnet() {
  printf '\035' | timeout --signal=9 1 telnet "$@"
}
export -f test_telnet
defn ttn test_telnet

# urlencode() {
#     # urlencode <string>
#     old_lc_collate=$LC_COLLATE
#     LC_COLLATE=C
#
#     if [ $# -eq 0 ]; then
#
#     else
#       local length="${#1}"
#       for (( i = 0; i < length; i++ )); do
#           local c="${1:i:1}"
#           case $c in
#               [a-zA-Z0-9.~_-]) printf "$c" ;;
#               *) printf '%%%02X' "'$c" ;;
#           esac
#       done
#
#       LC_COLLATE=$old_lc_collate
# }
# export -f urlencode
# defn ue urlencode
#
# urldecode() {
#     # urldecode <string>
#
#     local url_encoded="${1//+/ }"
#     printf '%b' "${url_encoded//%/\\x}"
# }
# export -f urldecode
# defn ud urldecode

response_headers() {
    curl -sSD- $url -o /dev/null "$@"
}
export -f response_headers
defn crh response_headers
